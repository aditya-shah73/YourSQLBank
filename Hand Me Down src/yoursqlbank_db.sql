DROP DATABASE IF EXISTS YourSQLBank_DB;
CREATE DATABASE YourSQLBank_DB;
USE YourSQLBank_DB; 


#--The table of all the Users, each user has two accounts
DROP TABLE IF EXISTS User_TB;
CREATE TABLE User_TB
(
	 USER_ID INT AUTO_INCREMENT NOT NULL,
	 USERNAME VARCHAR(50) NOT NULL,
	 CHECKING_ACC_ID INT NOT NULL, 
	 SAVING_ACC_ID INT NOT NULL,
	 ADMIN BOOLEAN DEFAULT FALSE NOT NULL,
	 ACTIVE BOOLEAN DEFAULT TRUE NOT NULL,
	 EMAIL VARCHAR(50),
	 F_NAME VARCHAR(30) NOT NULL,
	 L_NAME VARCHAR(50) NOT NULL,
	 PASS VARCHAR(50) NOT NULL,
	 PIN VARCHAR(4) NOT NULL,
	 CREATED_ON DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	 LAST_LOGIN_DATE DATETIME,
	 PRIMARY KEY(USER_ID, USERNAME),
	 FOREIGN KEY(CHECKING_ACC_ID) REFERS Account_TB.ACC_ID,
	 FOREIGN KEY(SAVING_ACC_ID) REFERS Account_TB.ACC_ID
);


#--The table of all the Accounts, each links back to a user and has it's own balance
DROP TABLE IF EXISTS Account_TB;
CREATE TABLE Account_TB
(
	ACC_ID INT AUTO_INCREMENT NOT NULL,
	USER_ID INT NOT NULL,
	ACC_TYPE VARCHAR(4) NOT NULL,
	BALANCE FLOAT NOT NULL,
	PRIMARY KEY(ACC_ID)
);


#--The table of all the transactions that have ever happened, just a straight list of all the transactions.
DROP TABLE IF EXISTS History_TB;
CREATE TABLE History_TB
(
	TRSN_ID INT AUTO_INCREMENT NOT NULL,
	TRSN_TYPE VARCHAR(4) NOT NULL,
	TRSN_DESC VARCHAR(140),
	TRSN_AMT FLOAT NOT NULL,
	TIME DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	USER_ID INT NOT NULL,
	ACC_ID INT NOT NULL,
	PRIMARY KEY(TRSN_ID),
FOREIGN KEY(USER_ID) REFERS User_TB.USER_ID,
	FOREIGN KEY(ACC_ID) REFERS Account_TB.ACC_ID
);


#--The table of all the Accounts, each links back to a user and has it's own balance, for the archive.
DROP TABLE IF EXISTS Account_Archive_TB;
CREATE TABLE Account_Archive_TB
(
	ACC_ID INT AUTO_INCREMENT NOT NULL,
	USER_ID INT NOT NULL,
	ACC_TYPE VARCHAR(4) NOT NULL,
	BALANCE FLOAT NOT NULL,
	PRIMARY KEY(ACC_ID)
);


#--The table of all the transactions that have ever happened, just a straight list of all the transactions, for the archive.
DROP TABLE IF EXISTS History_TB_Archive;
CREATE TABLE History_TB_Archive
(
	TRSN_ID INT AUTO_INCREMENT NOT NULL,
	TRSN_TYPE VARCHAR(4) NOT NULL,
	TRSN_DESC VARCHAR(140),
	TRSN_AMT FLOAT NOT NULL,
	TIME DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	USER_ID INT NOT NULL,
	ACC_ID INT NOT NULL,
	PRIMARY KEY(TRSN_ID),
FOREIGN KEY(USER_ID) REFERS User_TB.USER_ID,
	FOREIGN KEY(ACC_ID) REFERS Account_Archive_TB.ACC_ID
);
